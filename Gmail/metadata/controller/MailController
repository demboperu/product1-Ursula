{
    "type": "Ext.app.Controller",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "designer|userClassName": "MailController",
        "stores": [
            "MailStore"
        ]
    },
    "designerId": "39f09476-61de-4878-9024-d905aef070d3",
    "cn": [
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#mainPanel",
                "designer|targetType": "Ext.panel.Panel",
                "fn": "onLoad",
                "implHandler": [
                    "\r",
                    "//set interval for refreshing contacts\r",
                    "var contactGrid = this.getContactGrid();\r",
                    "\r",
                    "var refreshContacts = function(){\r",
                    "    contactGrid.getStore().load({params:{\r",
                    "            idUsuario: localStorage.getItem(\"userId\")\r",
                    "        }\r",
                    "    });\r",
                    "    console.log('contacts updated');\r",
                    "};\r",
                    "\r",
                    "interval = 1000 * 60 * 5;\r",
                    "intervalID = setInterval(refreshContacts, interval);\r",
                    "\r",
                    "//set user name on header panel\r",
                    "var headerPanel = this.getHeaderPanel();\r",
                    "headerPanel.setTitle(\"Welcome \"+localStorage.getItem(\"userName\"));\r",
                    "\r",
                    "\r",
                    "//load user's mails\r",
                    "\r",
                    "var mailGrid = this.getGridPanel();\r",
                    "\r",
                    "mailGrid.getStore().load({params:{\r",
                    "    idUsuario: localStorage.getItem(\"userId\")\r",
                    "    }\r",
                    "});\r",
                    "\r",
                    "//Hide refresh button\r",
                    "var pagtool = this.getPagingToolbar();\r",
                    "pagtool.down('#refresh').hide();\r",
                    "\r",
                    "\r",
                    "refreshContacts();"
                ],
                "name": "show",
                "scope": "me"
            },
            "designerId": "3123e80d-c33b-4d42-af10-1c1a4416327f"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#btnRefresh",
                "designer|params": [
                    "target"
                ],
                "fn": "refreshInbox",
                "implHandler": [
                    "this.getGridPanel().getStore().load({params:{\r",
                    "        idUsuario: localStorage.getItem(\"userId\")\r",
                    "        }\r",
                    "    });"
                ],
                "name": "click",
                "scope": "me"
            },
            "designerId": "9bec96b5-168c-4bd7-a9fc-fe670c70e9fd"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#btnLogout",
                "designer|params": [
                    "target"
                ],
                "fn": "logout",
                "implHandler": [
                    "\r",
                    "//Stop refreshing contacts grid\r",
                    "clearInterval(intervalID);\r",
                    "\r",
                    "//clear mail panel\r",
                    "var mailPanel = this.getMailPanel(),\t\t// Get details panel\r",
                    "    mailToolbar = this.getMailToolbar();\t// Get details panel toolbar\r",
                    "\r",
                    "// Clear panel content\r",
                    "mailPanel.update(null);\r",
                    "\r",
                    "// Hide toolbar\r",
                    "mailToolbar.hide();\r",
                    "\r",
                    "\r",
                    "this.getAppView().layout.setActiveItem(0);\r",
                    "\r",
                    "localStorage.removeItem(\"userName\");\r",
                    "localStorage.removeItem(\"userId\");\r",
                    ""
                ],
                "name": "click",
                "scope": "me"
            },
            "designerId": "c471188d-9f57-42ae-ba92-f2ecd360ca93"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#btnSend",
                "designer|params": [
                    "target"
                ],
                "fn": "sendMail",
                "implHandler": [
                    "// Get the window and close it\r",
                    "var formWindow = target.up(\"window\");\r",
                    "\r",
                    "//Obtain values\r",
                    "var values = this.getMailForm().getValues();\r",
                    "\r",
                    "\r",
                    "function successCallback(response, ops){ \r",
                    "   formWindow.destroy();\r",
                    "}\r",
                    "\r",
                    "function  failureCallback(response, ops){\r",
                    "   formWindow.destroy(); \r",
                    "}\r",
                    "\r",
                    "\r",
                    "function sendMail(){\r",
                    "    //Send mail\r",
                    "    Ext.Ajax.request({\r",
                    "        url: 'sendMail.jsp',\r",
                    "        params: values,\r",
                    "        success: successCallback,\r",
                    "        failure: failureCallback\r",
                    "    });\r",
                    "}\r",
                    "\r",
                    "\r",
                    "function validate(){\r",
                    "    if(values.to===\"\"){\r",
                    "        Ext.MessageBox.alert('Mail Error', 'Specify at least one destinatary');\r",
                    "    }else if(values.subject===\"\"){\r",
                    "       values.subject = \"(No subject)\";\r",
                    "       sendMail();\r",
                    "    }\r",
                    "}\r",
                    "\r",
                    "validate();"
                ],
                "name": "click",
                "scope": "me"
            },
            "designerId": "da8cd742-50ed-40f3-aae3-29fdd18e1f22"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#btnDeleteSelected",
                "designer|params": [
                    "target"
                ],
                "fn": "deleteSelected",
                "implHandler": [
                    "var me = this;\r",
                    "\r",
                    "// Confirm this delete\r",
                    "Ext.Msg.confirm('Confirm', 'Are you sure you want to delete the mail(s) selected?', function(btn) {\r",
                    "\r",
                    "    // User confirmed yes\r",
                    "    if (btn == 'yes') {\r",
                    "\r",
                    "        // Find records with indoor=true\r",
                    "        var records = me.getMailStoreStore().queryBy(function(record) {\r",
                    "            return record.get('selected') === true;\r",
                    "        });\r",
                    "\r",
                    "        var store = me.getMailStoreStore();\r",
                    "        records.each(function(record) {\r",
                    "           // var mail = record.findRecord(\"idMail\",record.data.idMail);\r",
                    "\r",
                    "            // Delete from store\r",
                    "            store.remove(record);\r",
                    "\r",
                    "        });\r",
                    "\r",
                    "        var mailPanel = me.getMailPanel(),\t\t// Get details panel\r",
                    "            mailToolbar = me.getMailToolbar();\t// Get details panel toolbar\r",
                    "\r",
                    "        // Clear panel content\r",
                    "        mailPanel.update(null);\r",
                    "\r",
                    "        // Hide toolbar\r",
                    "        mailToolbar.hide();\r",
                    "    }\r",
                    "\r",
                    "\r",
                    "});\r",
                    ""
                ],
                "name": "click",
                "scope": "me"
            },
            "designerId": "adeaa2a1-7963-4e45-b6f2-1f650962941b"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#btnDelete",
                "designer|params": [
                    "target"
                ],
                "fn": "delete",
                "implHandler": [
                    "\r",
                    "var me = this;\r",
                    "\r",
                    "// Confirm this delete\r",
                    "Ext.Msg.confirm('Confirm', 'Are you sure you want to delete this mail?', function(btn) {\r",
                    "\r",
                    "    // User confirmed yes\r",
                    "    if (btn == 'yes') {\r",
                    "\r",
                    "        var data = target.up('panel').data,\t\t\t\t// Get assosiated data\r",
                    "            store = me.getMailStoreStore(),\t\t\t\t// Get Records store\r",
                    "            mail = store.findRecord(\"idMail\",data.idMail),// Get current record\r",
                    "            mailPanel = me.getMailPanel(),\t\t// Get details panel\r",
                    "            mailToolbar = me.getMailToolbar();\t// Get details panel toolbar\r",
                    "\r",
                    "        // Delete from store\r",
                    "        store.remove(mail);\r",
                    "\r",
                    "        // Clear panel content\r",
                    "        mailPanel.update(null);\r",
                    "\r",
                    "        // Hide toolbar\r",
                    "        mailToolbar.hide();\r",
                    "\r",
                    "    }\r",
                    "\r",
                    "\r",
                    "});\r",
                    ""
                ],
                "name": "click",
                "scope": "me"
            },
            "designerId": "b78d7374-667d-43aa-a839-f1c6f111caaa"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#mailPanel #btnReplay",
                "designer|params": [
                    "target"
                ],
                "fn": "replay",
                "implHandler": [
                    "\r",
                    "// Create new mail form window\r",
                    "var data = target.up('panel').data,\t\t\t\t\t\t// Get panel's assosiated data\r",
                    "\tstore = this.getMailStoreStore(),\t\t\t\t\t// Get store\r",
                    "    mail = store.findRecord(\"idMail\",data.idMail),\t\t\t\t\t// Get current record\r",
                    "\tnewMail = Ext.create('widget.newMailPanel'),\t\t\t// Create new form window\r",
                    "\tform = newMail.down('form').getForm();\t\t\t\t// Get form within window\r",
                    "\r",
                    "// Load mail model into form\r",
                    "if(mail!==null){\r",
                    "    var content = mail.data.content,\r",
                    "        from = mail.data.from;\r",
                    "    \r",
                    "    mail.data.from = mail.data.to;\r",
                    "    mail.data.to = from;\r",
                    "    mail.data.content =\"\";\r",
                    "    \r",
                    "    form.loadRecord(mail);\r",
                    "    \r",
                    "    mail.data.content = content;\r",
                    "    mail.data.to = mail.data.from;\r",
                    "    mail.data.from = from;\r",
                    "    \r",
                    "    // Show window\r",
                    "    newMail.show();\r",
                    "}"
                ],
                "name": "click",
                "scope": "me"
            },
            "designerId": "d19d72cf-1035-4ce9-85cd-9e9a7a2a04ac"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#newMailButton",
                "designer|params": [
                    "target"
                ],
                "fn": "new",
                "implHandler": [
                    "\r",
                    "// Create new mail form window\r",
                    "var newMail = Ext.create(\"widget.newMailPanel\");\r",
                    "\r",
                    "\r",
                    "// Show window\r",
                    "//newMail.showAt(Ext.getBody().getViewSize().width - 150 - 586,Ext.getBody().getViewSize().height - 520);\r",
                    "newMail.show();\r",
                    "\r",
                    "newMail.items.get(0).items.get(0).getStore().load({params:{\r",
                    "    idUsuario: localStorage.getItem(\"userId\")\r",
                    "    }\r",
                    "});\r",
                    ""
                ],
                "name": "click",
                "scope": "me"
            },
            "designerId": "c431e0cd-b1da-4f93-a2aa-beb661cbfffa"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#gridPanel",
                "designer|params": [
                    "target",
                    "record"
                ],
                "fn": "view",
                "implHandler": [
                    "\r",
                    "var mail = this.getMailPanel(),\t// Get detail panel via controller ref\r",
                    "    toolbar = this.getMailToolbar();\t// Get detail panel toolbar via controller ref\r",
                    "\r",
                    "// Update the detail panel with the selected row's data\r",
                    "mail.update(record.data);\r",
                    "toolbar.show();"
                ],
                "name": "select",
                "scope": "me"
            },
            "designerId": "372706e5-71e8-420f-9c35-2bb95df72350"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "headerPanel",
                "selector": "#headerPanel"
            },
            "designerId": "76e8af42-e840-4811-bb91-c9bc5748202e"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "mailPanel",
                "selector": "#mailPanel"
            },
            "designerId": "cb43e638-6bbc-4293-8b4a-a0ae759fed46"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|displayName": "gridPanel",
                "ref": "gridPanel",
                "selector": "#gridPanel"
            },
            "designerId": "930cf980-2466-423b-9231-403ae26c757b"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|displayName": "contactGrid",
                "ref": "contactGrid",
                "selector": "#contactGrid"
            },
            "designerId": "359956dc-d635-451f-bbdc-6fda61e70a44"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|displayName": "",
                "ref": "mailToolbar",
                "selector": "#mailToolbar"
            },
            "designerId": "0e307506-1b35-4c92-8c0f-4c076eccf6bd"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#btnForward",
                "designer|params": [
                    "target"
                ],
                "fn": "forward",
                "implHandler": [
                    "\r",
                    "// Create new mail form window\r",
                    "var data = target.up('panel').data,\t\t\t\t\t\t// Get panel's assosiated data\r",
                    "\tstore = this.getMailStoreStore(),\t\t\t\t\t// Get store\r",
                    "    mail = store.findRecord(\"idMail\",data.idMail),\t\t\t\t\t// Get current record\r",
                    "\tnewMail = Ext.create('widget.newMailPanel'),\t\t\t// Create new form window\r",
                    "\tform = newMail.down('form').getForm();\t\t\t\t// Get form within window\r",
                    "\r",
                    "// Load mail model into form\r",
                    "if(mail!==null){\r",
                    "    var from = mail.data.from;\r",
                    "    \r",
                    "    mail.data.from = mail.data.to;\r",
                    "    mail.data.to = from;\r",
                    "    \r",
                    "    form.loadRecord(mail);\r",
                    "    \r",
                    "    mail.data.to = mail.data.from;\r",
                    "    mail.data.from = from;\r",
                    "\r",
                    "    // Show window\r",
                    "    newMail.show();\r",
                    "}"
                ],
                "name": "click",
                "scope": "me"
            },
            "designerId": "677e2a05-6ab9-4d73-88be-8ed0b758a0ac"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "appView",
                "selector": "#appView"
            },
            "designerId": "13eb9c9c-d94d-4e78-9ef6-3dc6eb7bf17b"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "pagingToolbar",
                "selector": "#pagingToolbar"
            },
            "designerId": "2773b35b-9b75-42ec-9b46-95b65e6f3292"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "context"
                ],
                "fn": "refreshContacts",
                "implHandler": [
                    "\r",
                    ""
                ]
            },
            "designerId": "1682d380-3ccc-4c9e-beca-8077fefd5d50"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "mailForm",
                "selector": "#mailForm"
            },
            "designerId": "26d099e7-ecce-4d1c-a1fb-59093a22e1e8"
        }
    ]
}